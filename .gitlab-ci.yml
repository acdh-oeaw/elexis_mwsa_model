image: "python:3.7.7-buster"
stages:
  - test
  - train
  - cml_run
  - deploy

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "prod"

test:
  stage: test
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python nltk_install.py
    - pytest -o log_cli=true  test/
  rules:
    - if: '$TEST_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
train:
  stage: train
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python nltk_install.py
    - dvc repro -pf $STAGES
  artifacts:
    paths:
      - mwsa_model/output/models/de.pkl
      - mwsa_model/output/models/en.pkl
      - mwsa_model/output/models/en.joblib
    expire_in: 4 weeks
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
train-export:
  stage: train
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - dvc repro -pf $STAGES
    - dvc push
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
cml:
  stage: cml_run
  image: dvcorg/cml-py3:latest
  script:
    - export NODE_TLS_REJECT_UNAUTHORIZED=0
    - cat mwsa_model/output/metrics/metrics_en.json >> report.md
    - cml-publish mwsa_model/output/plots/confusion_matrix.png --md >> report.md
    - cml-publish mwsa_model/output/plots/feature_importance.png --md >> report.md
    - cml-send-comment report.md
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


#staging:
#  stage: deploy
#  script:
#    - apt-get update -qy
#    - apt-get install -y ruby-dev
#    - gem install dpl
#    - dpl --provider=heroku --app=gitlab-ci-python-test-staging --api-key=$HEROKU_STAGING_API_KEY
#  only:
#    - master
